set term=screen-256color
set nocompatible
filetype plugin on
syntax on
set notermguicolors

try
  source ~/.dotfiles/private/vim
catch
  " No private dotfiles
endtry

" Plugins
call plug#begin('~/.vim/plugged')

" List plugins here
" Better tab completion
" Plug 'ervandew/supertab'

" More consistent colors across machines
Plug 'flazz/vim-colorschemes'

" Sensible defaults
Plug 'tpope/vim-sensible'

" Tab completion for /
Plug 'vim-scripts/SearchComplete'

" Multi-cursor
Plug 'terryma/vim-multiple-cursors'

" Comment multiple lines is \c
Plug 'preservim/nerdcommenter'


" Highlight trailing whitespace
Plug 'ntpeters/vim-better-whitespace'

" More syntax guides
Plug 'justinmk/vim-syntax-extra'

" Airline, I couldn't stay away.
Plug 'vim-airline/vim-airline'

" Latex math symbols. Must appear before vim-tmux-nav
Plug 'joom/latex-unicoder.vim'

" Better file swaps
Plug 'christoomey/vim-tmux-navigator'

" The best colorscheme
Plug 'sheerun/vim-polyglot'
Plug 'pineapplegiant/spaceduck', { 'branch': 'main' }

" Comment with power
Plug 'preservim/nerdcommenter'

" NNN File manager
Plug 'mcchrish/nnn.vim'

" Better c++ vim hilighting
Plug 'octol/vim-cpp-enhanced-highlight'

" Better spellcheck, including camel case
Plug 'kamykn/spelunker.vim'

" Personal wiki
Plug 'vimwiki/vimwiki'

" Enables extra language servers.
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'

call plug#end()

" Call :PlugInstall, :PlugUpdate, or :PlugClean


" COLORS AND THEMES
"if exists('+termguicolors')
  "let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  "let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  "set termguicolors
"endif
colorscheme spaceduck
let g:airline_theme = 'spaceduck'
" I hate the default comment color. Set to 'Purple 2'
hi Comment ctermfg=60 guifg=#686f9a

" Number lines
:set number relativenumber
:set nu rnu

" Always use 2-space tab, especially in python
set softtabstop=2 tabstop=2 shiftwidth=2 expandtab
autocmd FileType python set softtabstop=2 tabstop=2 shiftwidth=2 expandtab

" Spellcheck
set spell spelllang=en_us
nnoremap <leader>s :set spell!<cr>
" Better spellcheck coloring
hi clear SpellBad
hi SpellBad term=undercurl cterm=undercurl ctermfg=9
set nospell

"human readable linebreak
set linebreak

"Used for tab completion
set wildmode=longest,list,full
set wildmenu

" Crosshairs
:set cursorcolumn
:set cursorline
:set colorcolumn=81  "Hilight the first 'BAD' column
highlight CursorLine   cterm=NONE ctermbg=235 ctermfg=NONE
                     \ guibg=black guifg=NONE
highlight CursorColumn cterm=NONE ctermbg=235 ctermfg=NONE
                     \ guibg=black guifg=NONE
highlight ColorColumn ctermbg=235 guibg=black

" Line wrap auto for text file formats
au BufRead,BufNewFile *.md  setlocal textwidth=80
au BufRead,BufNewFile *.tex setlocal textwidth=80

" Automatically word wrap overflowed line
nmap <leader>w vipgq

" Want to know when tab is typed
set list
set listchars=tab:>-

set completeopt-=preview

" Turn off gross default highlighting
:hi clear TODO
:hi clear FIXME
:hi clear XXX
:hi link TODO Comment
:hi link FIXME Comment
:hi link XXX Comment

" disable some features for increased latex performance
au FileType tex setlocal nocursorline
au FileType tex setlocal nocursorcolumn
au FileType tex :NoMatchParen
au FileType tex setlocal colorcolumn=

" Want to know when tab is typed
set list
set listchars=tab:>-

" Open window to a buffer in the right vertical pane
cabbrev vb vert belowright sb

" For ipython integration, use tmux
let g:slime_target = "vimterminal"

" These options are only useful for when gvim launches vim in a gnome window.
set guioptions -=T  " Remove top bar
set guioptions -=m  " Remove menu
set guifont=Inconsolata-dz\ for\ Powerline\ Medium\ 12  " Font and size
set vb t_vb=  " turn off that annoying beep!

" Type to nav
let g:nnn#command = 'nnn -n'
" Disable default mappings
let g:nnn#set_default_mappings = 0
" Start nÂ³ in the current file's directory
nnoremap <leader>n :NnnPicker %:p:h<CR>
let g:nnn#layout = 'tabnew' " or vnew, tabnew etc.
let g:nnn#action = {
      \ '<c-t>': 'tab split'}


" Type latex in such a way that it doesn't interfere with switching panes
let g:unicoder_cancel_normal = 1
let g:unicoder_cancel_insert = 1
let g:unicoder_cancel_visual = 1
nnoremap <C-u> :call unicoder#start(0)<CR>
inoremap <C-u> <Esc>:call unicoder#start(1)<CR>
vnoremap <C-u> :<C-u>call unicoder#selection()<CR>

" Rebind increment so it plays nice with tmux and 10-digit numbers.
:set nrformats+=alpha
" Use ctrl-[i]ncr and ctrl-[d]ecr
:nnoremap <C-i> <C-a>
:nnoremap <C-d> <C-x>

" Command aliases make it easier to not mess up
fun! SetupCommandAlias(from, to)
  exec 'cnoreabbrev <expr> '.a:from
          \ .' ((getcmdtype() is# ":" && getcmdline() is# "'.a:from.'")'
          \ .'? ("'.a:to.'") : ("'.a:from.'"))'
endfun
call SetupCommandAlias("W","w")
call SetupCommandAlias("Q","q")
call SetupCommandAlias("E","e")
call SetupCommandAlias("WQ","wq")
call SetupCommandAlias("Wq","wq")
