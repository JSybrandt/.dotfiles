set term=screen-256color

" Plugins
call plug#begin('~/.vim/plugged')

" List plugins here

" Sensible defaults
Plug 'tpope/vim-sensible'

" Tab completion for /
Plug 'vim-scripts/SearchComplete'

" Multi-cursor
Plug 'terryma/vim-multiple-cursors'

" Comment multiple lines is \c
Plug 'preservim/nerdcommenter'

" Better tab completion
Plug 'ervandew/supertab'

" Highlight trailing whitespace
Plug 'ntpeters/vim-better-whitespace'

" More syntax guides
Plug 'justinmk/vim-syntax-extra'

" Airline, I couldn't stay away.
Plug 'vim-airline/vim-airline'

" Interopt with python
Plug 'jpalardy/vim-slime', { 'for': 'python' }
Plug 'hanschen/vim-ipython-cell', { 'for': 'python' }

" Better file swaps
Plug 'christoomey/vim-tmux-navigator'

" Godot support / syntax
Plug 'habamax/vim-godot'

" The best colorscheme
Plug 'sheerun/vim-polyglot'
Plug 'pineapplegiant/spaceduck', { 'branch': 'main' }

" NNN File manager
Plug 'mcchrish/nnn.vim'

call plug#end()

" Call :PlugInstall, :PlugUpdate, or :PlugClean

if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

colorscheme spaceduck
let g:airline_theme = 'spaceduck'

" Number lines
set number

" Always use 2-space tab, especially in python
set softtabstop=2 tabstop=2 shiftwidth=2 expandtab
autocmd FileType python set softtabstop=2 tabstop=2 shiftwidth=2 expandtab

" Spellcheck
set spell spelllang=en_us
nnoremap <leader>s :set spell!<cr>
" Better spellcheck coloring
hi clear SpellBad
hi SpellBad term=undercurl cterm=undercurl ctermfg=9

"human readable linebreak
set linebreak

"Used for tab completion
set wildmode=longest,list,full
set wildmenu

" Crosshairs
:set cursorcolumn
:set cursorline
:set colorcolumn=81  "Hilight the first 'BAD' column
highlight CursorLine   cterm=NONE ctermbg=235 ctermfg=NONE
                     \ guibg=black guifg=NONE
highlight CursorColumn cterm=NONE ctermbg=235 ctermfg=NONE
                     \ guibg=black guifg=NONE
highlight ColorColumn ctermbg=235 guibg=black

" Line wrap auto for text file formats
au BufRead,BufNewFile *.md  setlocal textwidth=80
au BufRead,BufNewFile *.tex setlocal textwidth=80

" Automatically word wrap overflowed line
nmap <leader>r vipgq

set completeopt-=preview

" disable some features for increased latex performance
au FileType tex setlocal nocursorline
au FileType tex setlocal nocursorcolumn
au FileType tex :NoMatchParen
au FileType tex setlocal colorcolumn=

" Want to know when tab is typed
set list
set listchars=tab:>-

" Open window to a buffer in the right vertical pane
cabbrev vb vert belowright sb

" For ipython integration, use tmux
let g:slime_target = "vimterminal"

" These options are only useful for when gvim launches vim in a gnome window.
set guioptions -=T  " Remove top bar
set guioptions -=m  " Remove menu
set guifont=Inconsolata-dz\ for\ Powerline\ Medium\ 12  " Font and size
set vb t_vb=  " turn off that annoying beep!

" Helps editing in Godot easier.
let g:godot_executable="godot3"

" Type to nav
let g:nnn#command = 'nnn -n'
" Disable default mappings
let g:nnn#set_default_mappings = 0
" Start nÂ³ in the current file's directory
nnoremap <leader>n :NnnPicker %:p:h<CR>
let g:nnn#layout = 'tabnew' " or vnew, tabnew etc.
let g:nnn#action = {
      \ '<c-t>': 'tab split'}


